version: 0.2

env:
  git-credential-helper: yes
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes
#batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
  #build-graph:
phases:
  pre_build:
    commands:
      - git submodule update --init --recursive
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG || true
  #install:
  install:
    runtime-versions:
      nodejs: 14
    commands:
       - if [ -d "SenchaCmd-7.4.0.39-linux-64-no-jre.zip" ]; then rm -Rf SenchaCmd-7.4.0.39-linux-64-no-jre.zip; fi
       - wget -nc https://trials.sencha.com/cmd/7.4.0.39/no-jre/SenchaCmd-7.4.0.39-linux-64-no-jre.zip
       - unzip SenchaCmd*
       - ./SenchaCmd*.sh -q
       - . ~/.bashrc
       - apt-get update -y
       - apt-get install -y makeself
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    #commands:
      # - command
      # - command
  #pre_build:
    #commands:
      # - command
      # - command
  build:
    commands:
       - ./gradlew assemble
       - cd traccar-web
       - npm install
       - npm run build
       - cd ../setup/
       - aws s3 cp s3://traccar-conf-sean/traccar.xml .
       - if [ -d "jdk-11.0.13-ojdkbuild-linux-x64.zip" ]; then rm -Rf jdk-11.0.13-ojdkbuild-linux-x64.zip; fi
       - wget -nc https://github.com/ojdkbuild/contrib_jdk11u-ci/releases/download/jdk-11.0.13%2B8/jdk-11.0.13-ojdkbuild-linux-x64.zip
       - ./package.sh 4.14 other
       - cp traccar*.zip ../traccar-docker/
       - cd ../traccar-docker/
       - echo Build started on `date`
       - echo Building the Docker image...          
       - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG -f Dockerfile.ubuntu .
       - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - cd ..
      #- gradle showMeCache
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
artifacts:
  files:
     - '*/traccar-other-4.14.zip'
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
cache:
  paths:
     - '~/.gradle/**/*'
     - '~/.npm/**/*'     
     - 'target/**/*'
     - 'nbactions.xml' 
     - '.gradle/**/*'
     - 'build/**/*'
     - 'src/main/java/org/traccar/protobuf/**/*'
     - 'SenchaCmd-7.4.0.39-linux-64-no-jre.zip'
     - 'setup/jdk-11.0.13-ojdkbuild-linux-x64.zip'
